#!/bin/bash

# Example:
#	autobackup /opt/sonda /var/lib/autobackup/sonda
#	autobackup

path_source=$1
db_name_postfix='.db'
path_backups=$2
max_countBackup_d=7
max_countBackup_w=5
max_countBackup_m=$((12*3))

if [ "$path_source" = "" ]; then
  path_source='/opt/sonda'
fi
if [ ! -e $path_source ]; then 
  echo "Error: can't find source dir!"
  exit 1
fi

if [ "$path_backups" = "" ]; then
  path_backups="/var/lib/autobackup/sonda"
fi
if [ ! -e $path_backups ]; then 
  mkdir -p $path_backups
fi

translate_switch() {
  of=$1

  case $of in
  "days" | "d") 
    switch='_d'
    ;;
  "weeks" | "w") 
    switch='_w'
    ;;
  "months" | "m") 
    switch='_m'
    ;;
  *)
    switch=''
    ;;
  esac

  echo $switch
  }

# 
# arg:	days, weeks, months
# Ex,: count_backups "days"
date_stamp=`date +%Y%m%d --date='3600 seconds ago'`
backup() {
  switch=`translate_switch $1`

  cd $path_source && tar -czf $path_backups/${date_stamp}_sondaDBs${switch}.dump.tar.gz *${db_name_postfix} &> /dev/null	# !!! cd
  }

# 
# arg:	days, weeks, months
# Ex,: count_backups "days"
count_backups() {
  switch=`translate_switch $1`

  res=`ls -la $path_backups | grep "${switch}.dump$" | wc -l`
  echo $res
  }

# 
# arg:	days, weeks, months
# Ex,: remove_thefarthestBackup "day"
remove_thefarthestBackup() {
  switch=`translate_switch $1`

  if [[ "$switch" = "" ]]; then
    echo "Error: bad arg"
    return 1
  fi

  rm -f $path_backups/`ls $path_backups | grep --color=never "${switch}.dump$" | head -n 1`
  }


backup "days"
while [ `count_backups "days"` -gt $max_countBackup_d ]; do
  remove_thefarthestBackup "days"
done

if [[ `date +%u` = "1" ]]; then
  backup "weeks"
  while [[ `count_backups "weeks"` -gt $max_countBackup_w ]]; do
    remove_thefarthestBackup "weeks"
  done
fi

if [[ `date +%m` = "01" ]]; then
  backup "months"
  while [[ `count_backups "months"` -gt $max_countBackup_m ]]; do
    remove_thefarthestBackup "months"
  done
fi

