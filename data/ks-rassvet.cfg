install
url --url=http://192.168.10.10/repos/os
lang ru_RU.UTF-8
keyboard us
network --onboot yes --device eth0 --bootproto dhcp --noipv6
rootpw redhat
firewall --disabled
authconfig --enableshadow --passalgo=sha512
selinux --permissive
timezone --utc Europe/Moscow
bootloader --location=mbr --driveorder=sda --append="crashkernel=auto rhgb quiet" --password=123
zerombr
clearpart --all
autopart
firstboot --disable

repo --name="Rassvet"  --baseurl=http://192.168.10.10/repos/os --cost=100

%packages
@base
@core
@basic-desktop
@desktop-platform
@directory-client
@fonts
@graphics
@internet-browser
@network-file-system-client
@print-client
@remote-desktop-clients
@russian-support
@server-platform
@x11
mtools
pax
sgpio
PyPAM
%end


%post

rm -Rf /etc/yum.repos.d/* &> /dev/null 
cat <<-EOF > /etc/yum.repos.d/forclient.repo
[os]
name=os
baseurl=http://192.168.10.10/repos/os/
enabled=1
gpgcheck=0

[1C]
name=1C
baseurl=http://192.168.10.10/repos/1C/
enabled=1
gpgcheck=0

[sonda]
name=sonda
baseurl=http://192.168.10.10/repos/sonda/
enabled=1
gpgcheck=0
EOF
yum clean all
yum repolist

cat <<-EOF > /usr/bin/setssh
#!/bin/bash

ip=\$1
foruser=\$2
pass=\$3

CacheFile=~/.setssh.cache
if [[ ! -e \$CacheFile ]]
then
	touch \$CacheFile
	chmod 666 \$CacheFile
fi

local_addr=\$(ifconfig eth0 2> /dev/null | sed -n '2 {s/^.*inet addr:\([0-9.]*\) .*/\1/;p}')

check()
	{
	if [ "\$ip" = "" ]
	then
		echo "Error: Input parameter isn't set!"
		return 1
	fi

	if [ "\$foruser" = "" ]
	then
		echo "Error: Input parameter isn't set!"
		return 1
	fi

	if [ "\$pass" = "" ]
	then
		echo "Error: Input parameter isn't set!"
		return 1
	fi

	return 0
	}



setssh()
	{
	yum list installed | grep expect &> /dev/null
	if [ "\`echo \$?\`" = "1" ]
	then 
		yum -y -q install expect
		if [ "\`echo \$?\`" = "1" ]
		then 
			echo "Error: Can't find and install package \"expect\" !"
			exit 1
		fi
	fi

	if [ ! -e /root/.ssh/id_rsa ] #replace root for ~ ????
	then
		expect -c "spawn ssh-keygen -t rsa
			expect \"id_rsa): \"
			send \"\r\"
			expect \"phrase): \"
			send \"\r\"
			expect \"again: \" {send \"\r\"; exp_continue }
			" > /dev/null
	fi

	expect -c "spawn ssh-copy-id -i \$foruser@\$ip
		expect {
			\"*(yes/no)?*\" {
				send \"yes\r\"; exp_continue
				expect \"assword\" {send \$pass\r; exp_continue}
				}
			\"assword\" {send \$pass\r; exp_continue}
			}
		" > /dev/null
	}

if [[ "\$ip" = "reset" ]]
then
	rm -f \$CacheFile
	echo "Cache file has been reseted"
	exit 0
fi

echo "\$local_addr : Setting ssh connection without password to \$ip for \"\$foruser\""
check
if [ "\`echo \$?\`" = "0" ]
then 
	grep "\$ip.*\$foruser" \$CacheFile &> /dev/null
	if [[ "\`echo \$?\`" = "1" ]]
	then
		setssh
		echo -e "\$ip\t\$foruser" >> \$CacheFile
	fi
else
	echo -e "
setssh --set ssh without password (through ssh public keys)
Usage: setssh <ip_addr> <user> <password> 
\t<ip_addr>\t--IP address of target machine
\t<user>\t--user for which we want to connect
\t<password>\t--password of <user> 
setssh uses cache file for established ssh connection. You can reset this file by command:
\tsetssh reset
"
fi
EOF
chmod +x /usr/bin/setssh

setssh 192.168.10.10 root 123123

exit 0

%end

